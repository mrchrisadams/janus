set antialias                     " MacVim: smooth fonts.
set encoding=utf-8                " Use UTF-8 everywhere.
set guifont=Inconsolata:h14       "add my preferred font

" Add more sane wrapping of words - takes us closes to 
" default textmate behaviour
command! -nargs=* Wrap set wrap linebreak nolist

" Clear the search hi-lighting
noremap <F4> :let @/ = ""<CR>

" Add more linespace, to make lines more readable, like Textmate is by default
set linespace=1 


function! RubyRun()
  cd %:p:h  " Use file dir as pwd
  redir => m
  silent w ! ruby
  redir END
  cd -  " Back to old dir
  new
  put=m
  " Fix Ctrl+M linefeeds.
  silent! %s/\r//
  " Fix extraneous leading blank lines.
  1,2d
  " Set a filetype so wetcan define a 'close' mapping with the 'run' mapping.
  set ft=ruby-runner
  " Make it a scratch (temporary) buffer.
  set buftype=nofile
  set bufhidden=hide
  setlocal noswapfile
endfunction

if has("autocmd") && has("gui_macvim")
  au FileType ruby map <buffer> <D-r> :call RubyRun()<CR>
  au FileType ruby imap <buffer> <D-r> <Esc>:call RubyRun()<CR>
  au FileType ruby-runner map <buffer> <D-r> ZZ
  au FileType ruby-runner map <buffer> q ZZ
endif

" Create markdown syntax shortcut
map <D-M> :set ft=markdown<CR>
imap <D-M> :set ft=markdown<CR>

" Make sure relative line numbering is set when opening new buffers, reading
" new files, or creating new views on files, like splits
" hit `:help au` to see more events to hook into.
au BufRead,BufNewFile,BufWinEnter * set relativenumber

" Set all files to use sane wrapping by default
au BufRead,BufNewFile,BufWinEnter * Wrap<CR>

" Set Drupal files to default to PHP colouring
au BufRead,BufNewFile {*.test,*.module,*.inc,*.install,*.info}    set ft=php

" Add more sane wrapping of words - takes us closes to 
" default textmate behaviour
command! -nargs=* Wrap set wrap linebreak nolist

" setting this here makes it impossible to set relative line numbers later
" http://superuser.com/questions/239756/vim-set-relativenumber-not-working-from-vimrc-only-works-when-set-in-buffer:
" set nonumber
set relativenumber


" Jump to errors before they're caused in a browser, and list them
 let g:syntastic_auto_jump=1
 let g:syntastic_auto_loc_list=2

" Strip trailing whitespace (including that in blank lines).
" http://vim.wikia.com/wiki/Remove_unwanted_spaces
command! Strip let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar>:nohl

" Statusline.
" %< truncation point
" \  space
" %f relative path to file
" %m modified flag [+] (modified), [-] (unmodifiable) or nothing
" %r readonly flag [RO]
" %y filetype [ruby]
" %= split point for left and right justification
" %-14.( %)  block of fixed width 14 characters
" %l current line
" %c current column
" %V current virtual column as -{num} if different from %c
" %P percentage through buffer
set statusline=%#warningmsg#%{SyntasticStatuslineFlag()}%*%<\ %f\ %m%r%y\ %=%-14.(%l,%c%V%)\ %P\ 
 

" Add command T style behaviour again or Peepopen
if has("gui_macvim")
  macmenu &File.New\ Tab key=<nop>
  map <D-t> <Plug>PeepOpen
end

" add Textmate filedrawer style remapping
" for NERDTREE
map <C-Tab> :NERDTreeToggle <CR>

" Add quick key for making a scratch window
map <F8> :ScratchOpen <CR>

